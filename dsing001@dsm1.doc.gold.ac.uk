<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #500;
  shape-rendering: crispEdges;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 2.0px;
}


</style>
<body>
<script src="http://d3js.org/d3.v3.js"></script>
<script>

var margin = {top: 20, right: 100, bottom: 40, left: 80},
    width = 800 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y").parse;

//plot all the line graphs..

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()	
    .range([height, 0]);


var color = d3.scale.category10()
	

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
	
var plotdatasource = {};
plotdatasource["Age"] = "Age_Surv.csv";
plotdatasource["Sex"] = "Sex_Surv.csv";
plotdatasource["Class"] = "Class_Surv.csv";
plotdatasource["Sex_Class"] = "Sex_Class.csv";

var titles = {};
titles["Age"] = "Age vs Survival";
titles["Sex"] = "Sex vs Survival ";
titles["Class"] = "Travel Class vs Survival";
titles["Sex_Class"] = "Sex , Travel Class vs Survival";

function plotdifferentbarcharts(src)
{
	var divname = '#' + src;
	d3.select("body").append("div").attr("id",src);
	
	
	var svg = d3.select(divname).append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
	
	plotdatasrc = plotdatasource[src];

 
  d3.csv(plotdatasrc, function(error, data) {
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== src; }));

data.forEach(function(d) {
    var y0 = 0;
    d.surv = color.domain().map(function(name) { return {name: name, y0: y0, y1: y0 += +d[name]}; });
    d.total = d.surv[d.surv.length - 1].y1;
  });

  //data.sort(function(a, b) { return b.total - a.total; });

  x.domain(data.map(function(d) { return d[src]; }));
  y.domain([0, d3.max(data, function(d) { return d.total; })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Count");

  var state = svg.selectAll(".state")
      .data(data)
    .enter().append("g")
      .attr("class", "g")
      .attr("transform", function(d) { return "translate(" + x(d[src]) + ",0)"; });

  state.selectAll("rect")
      .data(function(d) { return d.surv; })
    .enter().append("rect")
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.y1); })
      .attr("height", function(d) { return y(d.y0) - y(d.y1); })
      .style("fill", function(d) { return color(d.name); });

  var legend = svg.selectAll(".legend")
      .data(color.domain().slice().reverse())
    .enter().append("g")
      .attr("class", "legend")
      .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

  svg.append("text")
        .attr("x", (width / 2))             
        .attr("y", 0 - (margin.top / 3))
        .attr("text-anchor", "middle")  
        .style("font-size", "16px") 
        .style("text-decoration", "underline")  
        .text(titles[src]);

  legend.append("rect")
      .attr("x", width + 8)
      .attr("width", 12)
      .attr("height", 12)
      .style("fill", color);

  legend.append("text")
      .attr("x", width + 22)
      .attr("y", 6)
      .attr("dy", ".35em")
      .style("text-anchor", "start")
      .text(function(d) { return d; });
	});
	d3.select("body").append("p").attr("id",'p' + src);
}

var srcs = ["Sex","Class","Age","Sex_Class"];

for (var i = 0; i < srcs.length; i++) 
{
    plotdifferentbarcharts(srcs[i]);
}



</script>